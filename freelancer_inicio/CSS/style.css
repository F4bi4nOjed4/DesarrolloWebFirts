:root {
  --blanco:#ffffff;
  --oscuro:#212121;
  --primario:#ffc107;
  --secundario:#0097A7;
  --gris:#757575;

  --fuente-principal:3.8rem;
}



/* rem es relativo al documento */
/*1 rem = a 10px*/

html{
    font-size: 62.5%;
    box-sizing: border-box; /*Hack para box model - Ayuda a mantener una dimension en especifico iindependiente de padding que se le de*/
    scroll-snap-type: y mandatory;
}

/** EFECTO SCROLL  */


*, *:before, *:after {
    box-sizing: inherit;
  }
/* * selecciona todos los elementos del html */

body{
    font-size: 16px;
    font-family: 'Krub', sans-serif;

    /* degradado del fondo blanco/gris */
    background-image: linear-gradient(to top,rgb(197, 204, 209) 0%, var(--blanco) 100% );
} 
/* siempre usar la config de html y body para que el texto sea adaptable a cualquier pantalla  */

h1{
    font-size: var(--fuente-principal);
}
h2{
    font-size: 2.8rem;
}
h3{
    font-size: 1.8rem;
}

h1,h2,h3{
    text-align: center;
}

.sombra{
-webkit-box-shadow: 0px 7px 15px 0px rgba(36,33,36,1);
-moz-box-shadow: 0px 7px 15px 0px rgba(36,33,36,1);
box-shadow: 0px 7px 15px 0px rgba(36,33,36,1);
background-color: var(--blanco);
padding: 2rem;
border-radius: 1rem;
}

/* .titulo{     Esta parte se reemplazó por las lineas de arriba 
    text-align: center;
    /* font-size: 3.8rem; 3.8 rem con la config de arriba = 38px pero se puede especificar tambin con --fuente-principal*/
    /* font-size: var(--fuente-principal); 
    font-weight: 700;
    
} */

/* si se usa el span solamente en la etiqueta, le va a aplicar las características a todos los que sean span. Se debe especificar un h1 padre para que se aplique a todos los span que pertenezcana  h1 */
.titulo span{
    font-size: 2rem;    
}

/* Al estar en un div no se desplaza  */
.contenedor { /*Modifica todo lo que hace parte de nav*/
     max-width: 120rem; /*Si es width solo solo toma 120rem. AL poner el max-width se toman maximo120 si se puede, si no empieza a adaptarse al espacio */
    /* height: 3rem;
    margin-top: 0;
    margin-right: auto;
    margin-bottom: 0;
    margin-left: auto; */
    
    /* la siguiente linea reduce todo lo que se define arriba 
    top rigth bottom left*/
    margin: 0 auto;
}

.boton{
    background-color: var(--secundario);
    color:var(--blanco);
    text-decoration: none;
    padding: 1rem 3rem;
    margin-top: 4rem;
    font-size: 2rem;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    text-align: center;
    width: 90%;
    border: none; /*realmente para el botorn contactar no afecta la propiedad ya que el boton inicial no tenia border por defecto*/
}

.boton:hover{
    background-color: var(--primario);
    color:var(--oscuro);
    cursor:pointer;
}

@media (min-width:768px) {
    .boton{
        width:auto;  /*Con esto reseteamos el valorde 70% */
    }
}
/** Utilidades **/
.w-sm-100{
   width: 100%; 
}

@media (min-width:768px) { /*Para que cuando se ajuste la pantalla mas gradne a 768px se ajuste a la derecha*/
    .w-sm-100{
        width: auto;
    }
}

.flex{
    display: flex;
}

.alinear-derecha{
    justify-content: flex-end;
}


.nav-bg{ /*Es como un section, y agrupa todo lo que está dentro de el*/
    background-color: var(--secundario); 
}

.nav_main {
    
    /*background-color: var(--primario); este comando pintaria solo el area por la cual fue acotado el contenedor, es decir, el area que pertenece a nav*/
    /* cuando solo está padding con un valor significa que tiene: ej: 1rem 1rem 1rem 1rem en el sentido de las manecillas, arriba, derecha, abajo, izquierda */
    display: block;
    /* flex-direction:column; Deja inservible al justify-content:between si es column */
    /*align-items:center; Permite centrar los elementos*/

    /* text-align: center; Tambien funciona*/
    align-items: center;
}

/* si el tamaño es menor a 768 la nav principal se trasforma a column */
@media (min-width:768px) {
    .nav_main {
        display:flex;
        flex-direction:row;
        justify-content: space-between;
        /* Justify-content permite alinear de diferentes maneras horizontalmente */
    }
}


.nav_main a {
    display:block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none; /* le quita la linea azul al link */
    font-size: 2rem;
    font-weight: bold; /*Texto en negrita*/
    padding: 1rem;
}

.nav_main a:hover{
    background-color: var(--primario);
    color:var(--oscuro);
}

.segunda {
    background-image: url(../img/hero.jpg);
    /* Que no se repita la imagen */
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    position: relative;
    margin-bottom: 2rem;
    /* Si no le ponemos relative al padre, el hijo toma como posición absoluta la del documento */
}

/* EL padre de content es segunda, y, para que el hijo pueda tener posición absoluta, el padre debe tener posición relativa */

.content{
    position:absolute;
    background:rgba(0, 0, 0, 0.7);
    color: var(--blanco);
    /* left: 0;
    top: 0;
    right: 0;
    bottom:0; Esto sirve para seleccionar una zona independiente del valor del padding*/
    /* Valores en 100% para darle efecto de oscuridad */
    width: 100%;
    height: 100%; /*Esto funciona quitando el padding */
    display:flex; 
    flex-direction: column;/*Posiciona los items como columna*/
    align-items: center; /*Alinea los items en el centro*/
    justify-content: center; /*Sirve para centrar verticalmente */
}

.content h2 ,
.content p {
    color:var(--blanco);
}



/**servicios**/

@media (min-width:768px){
    .servicios{
        display:grid;
        grid-template-columns: 33.3% 33.3% 33.3%;
        grid-template-columns: 1fr 1fr 1fr; /*es lo mismo que 33.3%, se puede escribir tambien como grid-template-columns: repeat(3, 1fr); 1fr significa 1 fraccion*/
        /* grid: 200px 800px / 300px 300px; Es la simplificación de los dos comandos de arriba*/
        column-gap: 2rem; /*permite la separacion de las columnas en 10px*/
    }
}

.servicio{
 display: flex;
 flex-direction: column; 
 align-items: center;
}

.servicio p {
    line-height: 2; /*interlineado*/
    text-align: center;
}
.servicio h3 {
    color: var(--secundario);
}
.servicio .iconos {
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

/*Contacto*/
.formulario{
 background-color: var(--gris);
 width: min(60rem , 100%); /*Min utiliza el valor mas peque;o  // lo que hace min es tomar o asignarle el ancho al formulario del numero que sea mas quepe;o entre 60rem o el 100% ayuda a ahorrar mediaquery*/
 margin:0 auto; /*Se puede usar en caso de que sea un elemento cuyo padre no es un display flex (formulario tiene un display block)*/
 padding: 2rem;
 border-radius: 1rem;
}
.formulario fieldset{
    border: none;
}
.formulario legend{
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--primario);
}
@media (min-width:768px) {
    .contentCampos{
        display: grid; /*para ubicar el campo de telefono y nombre*/
        grid-template-columns: 1fr 1fr;
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem; /*separacion de columnas*/
    }
    .campo:nth-child(3),
    .campo:nth-child(4){/*Es un pseudo selector, y selecciona en el orden en el que esten ubicados, si fuera 1 selecciona nombre, 2 seria telefono (para no crear una clase extra)*/
        grid-column: 1 / 3; /*Al poner en el inspector nos fijamos que debe ir desde la columna 1 (etiqueta) 1 a la 3*/

        /* grid-row: 3 / 4; permite ubicarlo entre las etiquetas 3 y 4 */
    }
}

.campo{
    margin-bottom: 1rem;
}

.campo label{
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}

.text-area{
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}

.campo textarea{
    height: 20rem;
}

/*footer*/
.footer{
    text-align: center;
}

/* .enviar .boton{
    width: 100%;
}  Puede servir tambien para darle un ajuste al boton enviar V47*/

/* .campo input[type="text"] {
    background-color: red;
} selector de atributo, si quisieramos aplicarle a un campo en especifico una caracteristica deseada*/ 
/* Media quieries */
/* min-width es el tamaño de pantalla en el cual se va a ejecutar el code */
/* @media (min-width:480px){
    body{
        background-color: blue;
    }
}
@media (min-width:768px){
    body{
        background-color: cornflowerblue;
    }
} */

